services:
  pg-proxy:
    container_name: pg-proxy
    depends_on:
      - zookeeper
      - pg-primary
      - pg-secondary
      - pg-tertiary
    hostname: pg-proxy
    image: haproxy:3.1.1-alpine3.20
    labels:
      - homepage.group=Relational
      - homepage.name=HAProxy Stats
      - homepage.icon=haproxy.png
      - homepage.href=http://${DOMAIN}:7000
      - homepage.description=HAProxy stats for HA PostgreSQL (7000)
      - traefik.enable=true
      - traefik.http.services.pg-proxy-postgres-ha.loadbalancer.server.port=7000
    ports:
      - 5432:5432
      - 7000:7000
    volumes:
      - type: bind
        source: ./haproxy.cfg
        target: /usr/local/etc/haproxy/haproxy.cfg
    restart: unless-stopped
  pg-primary:
    container_name: pg-primary
    image: jamesdkelly88/postgres-patroni:16
    restart: unless-stopped
    hostname: pg-primary
    labels:
      - homepage.group=Relational
      - homepage.name=PostgreSQL (HA)
      - homepage.icon=postgres.png
      - homepage.description=3-node cluster (5432)
      - wud.tag.include=^\d$
    environment:
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      PATRONI_SUPERUSER_PASSWORD: ${SECRET_PASSWORD}
      PGDATA: '/var/lib/postgresql/data/pgdata'
    expose:
      - 5432
      - 8008
    volumes:
     - data1:/var/lib/postgresql/data
    command: patroni /postgres0.yml
  pg-secondary:
    container_name: pg-secondary
    image: jamesdkelly88/postgres-patroni:16
    restart: unless-stopped
    hostname: pg-secondary
    expose:
      - 5432
      - 8008
    volumes:
     - data2:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      PATRONI_SUPERUSER_PASSWORD: ${SECRET_PASSWORD}
      PGDATA: '/var/lib/postgresql/data/pgdata'
    command: patroni /postgres1.yml        
  pg-tertiary:
    container_name: pg-tertiary
    image: jamesdkelly88/postgres-patroni:16
    restart: unless-stopped
    hostname: pg-tertiary
    expose:
      - 5432
      - 8008
    volumes:
     - data3:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      PATRONI_SUPERUSER_PASSWORD: ${SECRET_PASSWORD}
      PGDATA: '/var/lib/postgresql/data/pgdata'
    command: patroni /postgres2.yml        
  zookeeper:
    container_name: zookeeper
    labels:
      - wud.tag.include=^\d+?.\d+?.\d+?$
    environment:
      ZOO_TICK_TIME: 2000
    image: zookeeper:3.9.3
    restart: unless-stopped
networks:
  default:
    name: postgres
    external: true

volumes:
  data1:
  data2:
  data3:
